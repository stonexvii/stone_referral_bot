from aiogram.utils.keyboard import InlineKeyboardBuilder

from database.tables import Users
from .buttons import MainMenuButton, ReferralMenuButton, BackButton, WelcomeButton, ProjectButton


def ikb_welcome(text: str, callback: str):
    keyboard = InlineKeyboardBuilder()
    keyboard.button(**WelcomeButton(text, callback).as_kwargs())
    return keyboard.as_markup()


def ikb_main_menu(user: Users):
    keyboard = InlineKeyboardBuilder()
    buttons = [
        MainMenuButton('‚≠êÔ∏è –ö—Ç–æ —Ç–∞–∫–æ–π –°—Ç–æ—É–Ω? ‚≠êÔ∏è', button='about_stone'),
        MainMenuButton('üõ† –ü—Ä–æ–µ–∫—Ç—ã', button='projects'),
        MainMenuButton('–†–µ—Ñ–µ—Ä–∞–ª—ã üíå', button='referrals_menu'),
        MainMenuButton('‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–∫—É ‚úâÔ∏è', url='https://t.me/STONE_XVII'),
    ]
    if user.tg_username:
        buttons.append(MainMenuButton('üì≤ –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üì≤', button='contact_stone'))
    for button in buttons:
        keyboard.button(**button.as_kwargs())

    keyboard.adjust(1, 2, 1, 1)
    return keyboard.as_markup()


def ikb_about_menu():
    keyboard = InlineKeyboardBuilder()
    buttons = [
        MainMenuButton('–ö–∞–Ω–∞–ª', url='https://t.me/stone_live'),
        MainMenuButton('–°–∫–∞—á–∞—Ç—å PDF', button='download_pdf'),
        BackButton('–ù–∞–∑–∞–¥'),
    ]
    for button in buttons:
        keyboard.button(**button.as_kwargs())
    keyboard.adjust(3, 1)
    return keyboard.as_markup()


def ikb_projects_menu():
    keyboard = InlineKeyboardBuilder()
    buttons = [
        ProjectButton('üí° –†–∞–∑–≥–æ–Ω—ã üí°', 'dispersal'),
        ProjectButton('üõ† –†–µ–º–æ–Ω—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π üõ†', 'event_fix'),
        ProjectButton('üíÄ –ö–æ—à–º–∞—Ä—ã –Ω–µ–≤–µ—Å—Ç üíÄ', 'brides_nightmares'),
        MainMenuButton('–ö–∞–Ω–∞–ª', url='https://t.me/stone_live'),
    ]
    for button in buttons:
        keyboard.button(**button.as_kwargs())
    keyboard.button(**BackButton('–ù–∞–∑–∞–¥', 'to_main').as_kwargs())
    keyboard.adjust(1)
    return keyboard.as_markup()


def ikb_dispersal_menu():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(
        text='–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–Ω–∫–µ—Ç—É',
        url='https://forms.gle/TBwUhnYvozhzcTiAA',
    )
    keyboard.button(**BackButton('–ù–∞–∑–∞–¥', 'to_projects').as_kwargs())
    keyboard.adjust(1)
    return keyboard.as_markup()


def ikb_event_fix():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(
        text='–í—ã–∑–≤–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞',
        url='https://t.me/STONE_XVII',
    )
    keyboard.button(**BackButton('–ù–∞–∑–∞–¥', 'to_projects').as_kwargs())
    keyboard.adjust(1)
    return keyboard.as_markup()


def ikb_referrals_menu(user: Users):
    keyboard = InlineKeyboardBuilder()
    if user.is_referral:
        buttons = [
            ReferralMenuButton('–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã', 'my_referrals'),
        ]
    else:
        buttons = [
            ReferralMenuButton('‚ûï –°—Ç–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º', 'new_referral'),
        ]
    buttons.append(BackButton('–ù–∞–∑–∞–¥'))
    for button in buttons:
        keyboard.button(**button.as_kwargs())
    keyboard.adjust(1)
    return keyboard.as_markup()


def ikb_back(target: str = 'to_main'):
    keyboard = InlineKeyboardBuilder()
    keyboard.button(**BackButton('–ù–∞–∑–∞–¥', target).as_kwargs())
    return keyboard.as_markup()
